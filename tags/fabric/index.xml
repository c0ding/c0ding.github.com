<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fabric on 逸阳</title>
    <link>https://c0ding.github.io/tags/fabric/</link>
    <description>Recent content in Fabric on 逸阳</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 05 Dec 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://c0ding.github.io/tags/fabric/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>hyperledger fabric configtx 文件解析</title>
      <link>https://c0ding.github.io/archive/fabric-1/</link>
      <pubDate>Wed, 05 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://c0ding.github.io/archive/fabric-1/</guid>
      <description>要掌握fabric，要先读懂配置文件开始
 Profiles 详解：  Profiles定义了 整个系统结构 和 channel结构。
 系统结构中配置了 orderer节点信息 和 组织的数量
   Profiles: # 定义了整个系统的配置信息 # 定义组织标识符，可自定义 SampleInsecureSolo: # 1，配置Orderer 属性 Orderer: # 前面有星号的*，就是引用属性？ # 引用名为 OrdererDefaults 的属性 &amp;lt;&amp;lt;: *OrdererDefaults Organizations: # 引用名为 OrdererOrg 的属性 - *OrdererOrg # 2，定义系统中包含的属性 Consortiums: SampleConsortium: # 系统中包含的组织 Organizations: # 引用下文 Org1 定义的配置 - *Org1 # 引用下文 Org2 定义的配置 - *Org2 # 引用下文 Org3 定义的配置 - *Org3 # 定义了Channel的配置信息 # 定义通道标识符，可自定义 SampleSingleMSPChannel: Consortium: SampleConsortium Application: # 引用名为 ApplicationDefaults 的属性 &amp;lt;&amp;lt;: *ApplicationDefaults # 包含的组织 Organizations: # 引用下文 Org1 定义的配置 - *Org1 # 引用下文 Org2 定义的配置 - *Org2 # orderer节点相关信息 Organizations: # orderer节点配置信息 - &amp;amp;SampleOrg # orderer节点名称 Name: SampleOrg # orderer节点编号 ID: DEFAULT # msp 文件夹路径 MSPDir: msp - &amp;amp;Org1 # orderer节点名称 Name: SampleOrg1 # orderer节点编号 ID: SampleOrgId1 # msp 文件夹路径 MSPDir: msp # 组织访问的域名和端口 AnchorPeers: - Host: peer0.</description>
    </item>
    
  </channel>
</rss>